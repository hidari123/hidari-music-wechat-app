{"version":3,"sources":["anchor-markdown-header.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["\n\nvar emojiRegex = require('emoji-regex');\n\n// https://github.com/joyent/node/blob/192192a09e2d2e0d6bdd0934f602d2dbbf10ed06/tools/doc/html.js#L172-L183\nfunction getNodejsId(text, repetition) {\n  text = text.replace(/[^a-z0-9]+/g, '_');\n  text = text.replace(/^_+|_+$/, '');\n  text = text.replace(/^([^a-z])/, '_$1');\n\n  // If no repetition, or if the repetition is 0 then ignore. Otherwise append '_' and the number.\n  // An example may be found here: http://nodejs.org/api/domain.html#domain_example_1\n  if (repetition) {\n    text += '_' + repetition;\n  }\n\n  return text;\n}\n\nfunction basicGithubId(text) {\n  return text.replace(/ /g,'-')\n    // escape codes\n    .replace(/%([abcdef]|\\d){2,2}/ig, '')\n    // single chars that are removed\n    .replace(/[\\/?!:\\[\\]`.,()*\"';{}+=<>~\\$|#@&–—]/g,'')\n    // CJK punctuations that are removed\n    .replace(/[。？！，、；：“”【】（）〔〕［］﹃﹄“ ”‘’﹁﹂—…－～《》〈〉「」]/g, '')\n    ;\n\n}\n\nfunction getGithubId(text, repetition) {\n  text = basicGithubId(text);\n\n  // If no repetition, or if the repetition is 0 then ignore. Otherwise append '-' and the number.\n  if (repetition) {\n    text += '-' + repetition;\n  }\n\n  // Strip emojis\n  text = text.replace(emojiRegex(), '')\n\n  return text;\n}\n\nfunction getBitbucketId(text, repetition) {\n  text = 'markdown-header-' + basicGithubId(text);\n\n  // BitBucket condenses consecutive hyphens (GitHub doesn't)\n  text = text.replace(/--+/g, '-');\n\n  // If no repetition, or if the repetition is 0 then ignore. Otherwise append '_' and the number.\n  // https://groups.google.com/d/msg/bitbucket-users/XnEWbbzs5wU/Fat0UdIecZkJ\n  if (repetition) {\n    text += '_' + repetition;\n  }\n\n  return text;\n}\n\nfunction basicGhostId(text) {\n  return text.replace(/ /g,'')\n    // escape codes are not removed\n    // single chars that are removed\n    .replace(/[\\/?:\\[\\]`.,()*\"';{}\\-+=<>!@#%^&\\\\\\|]/g,'')\n    // $ replaced with d\n    .replace(/\\$/g, 'd')\n    // ~ replaced with t\n    .replace(/~/g, 't')\n    ;\n}\n\nfunction getGhostId(text) {\n  text = basicGhostId(text);\n\n  // Repetitions not supported\n\n  return text;\n}\n\n// see: https://github.com/gitlabhq/gitlabhq/blob/master/doc/user/markdown.md#header-ids-and-links\nfunction getGitlabId(text, repetition) {\n  text = text\n    .replace(/<(.*)>(.*)<\\/\\1>/g,\"$2\") // html tags\n    .replace(/!\\[.*\\]\\(.*\\)/g,'')      // image tags\n    .replace(/\\[(.*)\\]\\(.*\\)/,\"$1\")    // url\n    .replace(/\\s+/g, '-')              // All spaces are converted to hyphens\n    .replace(/[\\/?!:\\[\\]`.,()*\"';{}+=<>~\\$|#@]/g,'') // All non-word text (e.g., punctuation, HTML) is removed\n    .replace(/[。？！，、；：“”【】（）〔〕［］﹃﹄“ ”‘’﹁﹂—…－～《》〈〉「」]/g, '') // remove CJK punctuations\n    .replace(/[-]+/g,'-')              // duplicated hyphen\n    .replace(/^-/,'')                  // ltrim hyphen\n    .replace(/-$/,'');                 // rtrim hyphen\n  // If no repetition, or if the repetition is 0 then ignore. Otherwise append '-' and the number.\n  if (repetition) {\n    text += '-' + repetition;\n  }\n  return text;\n}\n\n\n/**\n * Generates an anchor for the given header and mode.\n *\n * @name anchorMarkdownHeader\n * @function\n * @param header      {String} The header to be anchored.\n * @param mode        {String} The anchor mode (github.com|nodejs.org|bitbucket.org|ghost.org|gitlab.com).\n * @param repetition  {Number} The nth occurrence of this header text, starting with 0. Not required for the 0th instance.\n * @param moduleName  {String} The name of the module of the given header (required only for 'nodejs.org' mode).\n * @return            {String} The header anchor that is compatible with the given mode.\n */\nmodule.exports = function anchorMarkdownHeader(header, mode, repetition, moduleName) {\n  mode = mode || 'github.com';\n  var replace;\n\n  switch(mode) {\n    case 'github.com':\n      replace = getGithubId;\n      break;\n    case 'bitbucket.org':\n      replace = getBitbucketId;\n      break;\n    case 'gitlab.com':\n      replace = getGitlabId;\n      break;\n    case 'nodejs.org':\n      if (!moduleName) throw new Error('Need module name to generate proper anchor for ' + mode);\n      replace = function (hd, repetition) {\n          return getNodejsId(moduleName + '.' + hd, repetition);\n      };\n      break;\n    case 'ghost.org':\n      replace = getGhostId;\n      break;\n    default:\n      throw new Error('Unknown mode: ' + mode);\n  }\n\n  var href = replace(header.trim().toLowerCase(), repetition);\n\n  return '[' + header + '](#' + encodeURI(href) + ')';\n};\n"]}